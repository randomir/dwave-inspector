version: 2

environment:
  PIP_PROGRESS_BAR: off

jobs:

  #
  # linux
  #

  test-3.9: &test-linux-template
    docker:
      - image: circleci/python:3.9.0

    steps:
      - checkout

      - restore_cache: &restore-cache-tests
          key: v1-dependencies-{{ checksum "requirements.txt" }}-{{ checksum "tests/requirements.txt" }}-{{ .Environment.CIRCLE_JOB }}

      - run: &create-virtualenv
          name: Create virtual environment
          command: python -m virtualenv env

      - run: &install-requirements-tests
          name: Install requirements
          command: |
            . env/bin/activate
            pip install -U pip setuptools
            pip install -r requirements.txt -r tests/requirements.txt
            pip install dwave-inspectorapp --extra-index=https://pypi.dwavesys.com/simple
            pip install wheel twine

      - save_cache: &save-cache-tests
          key: v1-dependencies-{{ checksum "requirements.txt" }}-{{ checksum "tests/requirements.txt" }}-{{ .Environment.CIRCLE_JOB }}
          paths:
            - env

      - run: &install-package
          name: Install package
          command: env/bin/python setup.py install

      - run: &build-package
          name: Build package
          command: env/bin/python setup.py sdist bdist_wheel

      - run: &run-tests
          name: Run tests
          command: env/bin/coverage run -m unittest discover

      - run:
          name: codecov
          command: |
            . env/bin/activate
            codecov   # calls `coverage xml`, so we must activate venv

  test-3.8:
    <<: *test-linux-template
    docker:
      - image: circleci/python:3.8.6

  test-3.7:
    <<: *test-linux-template
    docker:
      - image: circleci/python:3.7.9

  test-3.6:
    <<: *test-linux-template
    docker:
      - image: circleci/python:3.6.12

  test-3.5:
    <<: *test-linux-template
    docker:
      - image: circleci/python:3.5.10

  #
  # macos
  #

  test-osx-3.9: &test-osx-template
    macos:
      xcode: "12.3.0"

    environment:
      PYTHON: 3.9.0

    steps:
      - checkout

      # install $PYTHON and cache it
      - run: HOMEBREW_NO_AUTO_UPDATE=1 brew install pyenv

      - restore_cache:
          keys:
            - pyenv-{{ .Environment.CIRCLE_JOB }}-xcode-12.3.0

      - run: pyenv install $PYTHON -s

      - save_cache:
          key: pyenv-{{ .Environment.CIRCLE_JOB }}-xcode-12.3.0
          paths:
            - ~/.pyenv

      # install dependencies and cache them
      - run:
          name: Create virtual environment
          command: |
            eval "$(pyenv init -)"
            pyenv local $PYTHON
            python -m venv env

      - restore_cache: *restore-cache-tests

      - run: *install-requirements-tests

      - save_cache: *save-cache-tests

      - run: *install-package

      - run: *run-tests

  test-osx-3.8:
    <<: *test-osx-template
    environment:
      PYTHON: 3.8.6

  test-osx-3.7:
    <<: *test-osx-template
    environment:
      PYTHON: 3.7.9

  test-osx-3.6:
    <<: *test-osx-template
    environment:
      PYTHON: 3.6.12

  test-osx-3.5:
    <<: *test-osx-template
    environment:
      PYTHON: 3.5.10

  #
  # docs
  #

  # based on test-linux-template
  test-docs:
    docker:
      - image: circleci/python:3.8

    steps:
      - checkout

      - restore_cache: &restore-cache-docs
          key: v1-dependencies-{{ checksum "requirements.txt" }}-{{ checksum "docs/requirements.txt" }}-{{ .Environment.CIRCLE_JOB }}

      - run: *create-virtualenv

      - run: &install-requirements-docs
          name: Install requirements
          command: |
            . env/bin/activate
            pip install -U pip setuptools
            pip install -r requirements.txt -r docs/requirements.txt
            pip install dwave-inspectorapp --extra-index=https://pypi.dwavesys.com/simple

      - save_cache: &save-cache-docs
          key: v1-dependencies-{{ checksum "requirements.txt" }}-{{ checksum "docs/requirements.txt" }}-{{ .Environment.CIRCLE_JOB }}
          paths:
            - env

      - run: *install-package

      - run: &build-docs
          name: Build docs
          command: |
            . env/bin/activate
            make -C docs/ html

      - store_artifacts:
          path: ./docs/build/html

      - run: &run-doctest
          name: doctest
          command: |
            . env/bin/activate
            make -C docs/ doctest

  #
  # deploy
  #

  pypi-deploy:
    <<: *test-linux-template
    steps:
      - checkout
      - restore_cache:
          key: v1-dependencies-{{ checksum "requirements.txt" }}-{{ checksum "tests/requirements.txt" }}-test-3.9
      - run: *build-package
      - store_artifacts:
          path: dist
      - run: env/bin/twine upload -u "$PYPI_USERNAME" -p "$PYPI_PASSWORD" --skip-existing ./dist/*


workflows:
  version: 2
  test:
    jobs:
      - test-3.9
      - test-3.8
      - test-3.7
      - test-3.6
      - test-3.5
      - test-osx-3.9
      - test-osx-3.8
      - test-osx-3.7
      - test-osx-3.6
      - test-osx-3.5
      - test-docs

  deploy:
    jobs:
      - test-3.9:
          filters:
            tags:
              only: /^[0-9]+(\.[0-9]+)*(\.dev([0-9]+)?)?$/
            branches:
              ignore: /.*/
      - pypi-deploy:
          requires:
            - test-3.9
          filters:
            tags:
              only: /^[0-9]+(\.[0-9]+)*(\.dev([0-9]+)?)?$/
            branches:
              ignore: /.*/
